# .github/workflows/load-test.yml
name: Load Test

on:
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      server_type:
        description: 'Server to test (java or bedrock)'
        required: true
        default: 'java'
        type: choice
        options:
        - java
        - bedrock
      clients:
        description: 'Number of concurrent clients'
        required: true
        default: '100'

jobs:
  load-test:
    name: Run Load Test (${{ matrix.server_type }})
    runs-on: [ubuntu-latest]

    strategy:
      matrix:
        server_type: ${{ fromJSON(github.event.inputs.server_type && format('["{0}"]', github.event.inputs.server_type) || '["java", "bedrock"]') }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up and start test environment
        id: setup
        run: |
          echo "--- Building and starting Docker services ---"
          docker compose -f tests/docker-compose.tests.yml up --build -d
          
          echo "--- Waiting for nether-bridge to be healthy ---"
          timeout=120
          start_time=$(date +%s)
          while true; do
            status=$(docker inspect --format '{{.State.Health.Status}}' nether-bridge || echo "error")
            if [ "$status" = "healthy" ]; then
              echo "Nether-bridge is healthy."
              break
            fi
            if [ "$(($(date +%s) - start_time))" -ge "$timeout" ]; then
              echo "Timeout waiting for nether-bridge container to become healthy."
              docker compose -f tests/docker-compose.tests.yml logs --no-color
              exit 1
            fi
            sleep 5
          done

      - name: Run Load Test Script
        run: |
          CLIENT_COUNT=${{ github.event_name == 'workflow_dispatch' && github.event.inputs.clients || '10' }}
          
          echo "--- Running load test on ${{ matrix.server_type }} with $CLIENT_COUNT clients ---"
          docker compose -f tests/docker-compose.tests.yml exec nb-tester \
            python tests/load_tester.py \
              --server-type ${{ matrix.server_type }} \
              --clients $CLIENT_COUNT \
              --chaos 30

      - name: Dump container logs on failure
        if: failure() || steps.setup.outcome == 'failure'
        run: |
          echo "--- A step failed. Dumping all container logs. ---"
          docker compose -f tests/docker-compose.tests.yml logs --no-color