# .github/workflows/load-testing.yml
name: Manual Load Test

on:
  workflow_dispatch:
    inputs:
      server_type:
        description: 'Server to test (java or bedrock)'
        required: true
        default: 'java'
      clients:
        description: 'Number of concurrent clients'
        required: true
        default: '50'

jobs:
  load-test:
    name: Run Load Test
    runs-on: [self-hosted, ubuntu-latest]
    env:
      JAVA_VERSION: "1.20.1"
      JAVA_TYPE: "PAPER"
      BEDROCK_VERSION: "1.20.81.01"
      BEDROCK_DOWNLOAD_URL: https://www.minecraft.net/bedrockdedicatedserver/bin-linux/bedrock-server-1.20.81.01.zip
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up and run test environment
        run: |
          echo "--- Building and starting services ---"
          docker compose -f tests/docker-compose.tests.yml up --build -d
          
          echo "--- Waiting for nether-bridge to be healthy ---"
          timeout=120
          start_time=$(date +%s)
          while true; do
            status=$(docker inspect --format '{{.State.Health.Status}}' nether-bridge || echo "error")
            if [ "$status" = "healthy" ]; then
              echo "Nether-bridge is healthy."
              break
            fi
            if [ "$(($(date +%s) - start_time))" -ge "$timeout" ]; then
              echo "Timeout waiting for container."
              exit 1
            fi
            sleep 5
          done

      - name: Run Load Test Script
        run: |
          echo "--- Running load test against ${{ github.event.inputs.server_type }} server ---"
          # We now run this inside the nb-tester container, which is on the same Docker network
          # and can resolve the service name 'nether-bridge' directly.
          docker compose -f tests/docker-compose.tests.yml exec -T nb-tester \
            python tests/load_tester.py \
              --server-type ${{ github.event.inputs.server_type }} \
              --clients ${{ github.event.inputs.clients }}

      # --- ADD THIS STEP ---
      # This step will only run if one of the previous steps has failed.
      - name: Dump container logs on failure
        if: failure()
        run: |
          echo "--- A step failed. Dumping all container logs. ---"
          docker compose -f tests/docker-compose.tests.yml logs --no-color