# .github/workflows/pr-validation.yml
name: Pull Request Validation

on:
  pull_request:
    branches: [ main, develop ]

  workflow_dispatch:
    inputs:
      branch:
        description: 'The branch to run validation against'
        required: true
        default: 'develop'
        type: string

permissions:
  contents: read
  packages: write

jobs:
  validate-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # This step is removed as it's no longer necessary with the new entrypoint script.
      # - name: Get Docker GID
      #   id: docker-gid
      #   run: 'echo "DOCKER_GID=$(getent group docker | cut -d: -f3)" >> $GITHUB_ENV'

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Build Docker images using Bake
        run: docker bake

      - name: Start Test Environment from built images
        run: docker compose -f tests/docker-compose.tests.yml up -d --no-build

      - name: Wait for Nether-bridge to be healthy
        run: |
          echo "Waiting for nether-bridge container to be healthy..."
          for i in {1..24}; do
            status=$(docker inspect --format '{{if .State.Health}}{{.State.Health.Status}}{{end}}' nether-bridge)
            if [ "$status" == "healthy" ]; then
              echo "Nether-bridge is healthy!"
              exit 0
            fi
            echo "Current status: $status. Waiting 5s..."
            sleep 5
          done
          echo "Timeout: Nether-bridge did not become healthy after 2 minutes."
          exit 1
      
      - name: Lint with ruff
        run: |
          echo "Running ruff linter..."
          docker compose -f tests/docker-compose.tests.yml exec -T nb-tester ruff check .

      - name: Check formatting with ruff
        run: |
          echo "Checking formatting with ruff..."
          docker compose -f tests/docker-compose.tests.yml exec -T nb-tester ruff format --check .

      - name: Run all tests
        run: |
          PROXY_IP=$(docker inspect nether-bridge | jq -r '.[0].NetworkSettings.Networks | .[] | .IPAddress')
          echo "Found nether-bridge IP: ${PROXY_IP}"
          # ADD THE '--user naeus' FLAG HERE to run pytest as the correct user
          docker compose -f tests/docker-compose.tests.yml exec -T --user naeus nb-tester env CI_MODE=true PROXY_IP=${PROXY_IP} python -m pytest --cov=nether_bridge --cov-report term-missing
        id: run-tests

      - name: Dump All Container Logs on Failure
        if: ${{ failure() }}
        run: |
          echo "--- DUMPING ALL CONTAINER LOGS DUE TO FAILURE ---"
          docker compose -f tests/docker-compose.tests.yml ps -a
          echo "--- Docker Compose logs (all services) ---"
          docker compose -f tests/docker-compose.tests.yml logs --no-color
          echo "--- END LOG DUMP ---"

      - name: Tear down test environment
        if: always()
        run: |
          echo "Tearing down Docker Compose environment..."
          docker compose -f tests/docker-compose.tests.yml down -v --remove-orphans