name: Pull Request Validation

on:
  pull_request:
    branches: [ main ]

jobs:
  validate-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Remove the explicit apt-get install for docker-compose-plugin
      # It might already be available or handled by docker/setup-buildx-action or similar.

      - name: Set COMPOSE_PROJECT_PATH for CI environment
        run: echo "COMPOSE_PROJECT_PATH=$(pwd)" >> $GITHUB_ENV

      # Add this step explicitly, as it's typically used for Docker builds and ensures Docker context is set up.
      - name: Set up Docker Buildx (may ensure docker compose is available)
        uses: docker/setup-buildx-action@v3

      - name: Start Test Environment
        run: |
          # Use docker-compose.tests.yml for all test services
          docker compose -f tests/docker-compose.tests.yml up --build -d --remove-orphans

      - name: Dump Nether-Bridge Logs on Setup Failure (Optional Debugging)
        if: ${{ failure() }}
        run: |
          echo "--- Nether-Bridge Container Logs (on initial 'up' failure) ---"
          docker logs nether-bridge || true
          echo "------------------------------------"
          docker ps -a
          echo "--- docker inspect nether-bridge (brief) ---"
          docker inspect nether-bridge --format '{{.State.Status}} {{.State.ExitCode}} {{.State.Error}} {{.State.Health}}' || true
          echo "--------------------------------------------"

      - name: Show Directory Structure Inside Tester Container
        run: |
          echo "Listing files and directory structure inside the 'tester' container at /app..."
          docker compose -f tests/docker-compose.tests.yml exec -T tester ls -lR /app

      - name: Run all tests
        run: |
          PROXY_IP=$(docker inspect nether-bridge | jq -r '.[0].NetworkSettings.Networks | .[] | .IPAddress')
          echo "Found nether-bridge IP: ${PROXY_IP}"
          docker compose -f tests/docker-compose.tests.yml exec -T tester \
            python -m pytest --cov=nether_bridge --cov-report term-missing --compose-file /app/tests/docker-compose.tests.yml
          
      - name: Tear down test environment
        if: always()
        run: |
          echo "Tearing down Docker Compose environment..."
          docker compose -f tests/docker-compose.tests.yml down -v --remove-orphans