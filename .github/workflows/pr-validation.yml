name: Pull Request Validation

on:
  pull_request:
    branches: [ main ]

jobs:
  validate-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build test images with cache
        uses: docker/build-push-action@v5
        with:
          context: .
          # The tags must match what's in docker-compose.tests.yml
          tags: |
            nether-bridge:local
            nb-tester:local
          # Build the 'testing' target for the nb-tester image
          target: testing
          # Load the images into the local Docker daemon instead of pushing
          load: true
          push: false
          # Configure caching to use the GitHub Container Registry
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/mcbd-proxy-cache:pr
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/mcbd-proxy-cache:pr,mode=max

      - name: Ensure local_env.py is absent in CI
        run: |
          rm -f tests/local_env.py || true

      - name: Set COMPOSE_PROJECT_PATH for CI environment
        run: echo "COMPOSE_PROJECT_PATH=$(pwd)" >> $GITHUB_ENV

      - name: Start Test Environment
        run: |
          docker compose -f tests/docker-compose.tests.yml up -d --remove-orphans
        id: start-env

      - name: Run all tests
        run: |
          PROXY_IP=$(docker inspect nether-bridge | jq -r '.[0].NetworkSettings.Networks | .[] | .IPAddress')
          echo "Found nether-bridge IP: ${PROXY_IP}"
          docker compose -f tests/docker-compose.tests.yml exec -T nb-tester env CI_MODE=true PROXY_IP=${PROXY_IP} python -m pytest --cov=nether_bridge --cov-report term-missing
        id: run-tests

      - name: Dump All Container Logs on Failure
        if: ${{ failure() }}
        run: |
          echo "--- DUMPING ALL CONTAINER LOGS DUE TO FAILURE ---"
          docker compose -f tests/docker-compose.tests.yml ps -a
          echo "--- Docker Compose logs (all services) ---"
          docker compose -f tests/docker-compose.tests.yml logs --no-color
          echo "--- END LOG DUMP ---"

      - name: Tear down test environment
        if: always()
        run: |
          echo "Tearing down Docker Compose environment..."
          docker compose -f tests/docker-compose.tests.yml down -v --remove-orphans