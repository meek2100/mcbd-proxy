name: Pull Request Validation

on:
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  validate-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build 'nether-bridge' image with cache
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: nether-bridge:local
          load: true
          push: false
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/mcbd-proxy-cache:pr
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/mcbd-proxy-cache:pr,mode=max

      - name: Build 'nb-tester' image with cache
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: nb-tester:local
          target: testing
          load: true
          push: false
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/mcbd-proxy-cache:pr
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/mcbd-proxy-cache:pr,mode=max

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Start Test Environment
        run: docker compose -f tests/docker-compose.tests.yml up -d --remove-orphans
        id: start-env

      - name: Wait for Nether-bridge to be healthy
        run: |
          echo "Waiting for nether-bridge container to be healthy..."
          for i in {1..24}; do
            status=$(docker inspect --format '{{if .State.Health}}{{.State.Health.Status}}{{end}}' nether-bridge)
            if [ "$status" == "healthy" ]; then
              echo "Nether-bridge is healthy!"
              exit 0
            fi
            echo "Current status: $status. Waiting 5s..."
            sleep 5
          done
          echo "Timeout: Nether-bridge did not become healthy after 2 minutes."
          exit 1
      
      # --- LINT & FORMATTING CHECKS ---
      - name: Lint with flake8
        run: |
          echo "Running flake8 linter..."
          docker compose -f tests/docker-compose.tests.yml exec -T nb-tester flake8 .

      - name: Check formatting with black
        run: |
          echo "Checking formatting with black..."
          docker compose -f tests/docker-compose.tests.yml exec -T nb-tester black --check .

      - name: Run all tests
        run: |
          PROXY_IP=$(docker inspect nether-bridge | jq -r '.[0].NetworkSettings.Networks | .[] | .IPAddress')
          echo "Found nether-bridge IP: ${PROXY_IP}"
          docker compose -f tests/docker-compose.tests.yml exec -T nb-tester env CI_MODE=true PROXY_IP=${PROXY_IP} python -m pytest --cov=nether_bridge --cov-report term-missing
        id: run-tests

      - name: Dump All Container Logs on Failure
        if: ${{ failure() }}
        run: |
          echo "--- DUMPING ALL CONTAINER LOGS DUE TO FAILURE ---"
          docker compose -f tests/docker-compose.tests.yml ps -a
          echo "--- Docker Compose logs (all services) ---"
          docker compose -f tests/docker-compose.tests.yml logs --no-color
          echo "--- END LOG DUMP ---"

      - name: Tear down test environment
        if: always()
        run: |
          echo "Tearing down Docker Compose environment..."
          docker compose -f tests/docker-compose.tests.yml down -v --remove-orphans