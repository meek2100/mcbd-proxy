# tests/docker-compose.tests.yml
# This file is used exclusively for running automated integration tests.

services:
  nether-bridge:
    # Builds from the Dockerfile in the parent directory.
    build:
      context: ../
      dockerfile: Dockerfile # Ensure this points to the correct Dockerfile (previously Dockerfile.txt)
    container_name: nether-bridge # Explicitly set container name
    restart: "no"
    networks:
      - mc-network
    ports:
      # Expose ports to the host for testing purposes (e.g., pytest can connect to 127.0.0.1)
      - "19132:19132/udp" # Default MCBE port players connect to first
      - "25565:25565/udp" # Port for Java server discovery
      - "25565:25565/tcp" # Port for Java server gameplay
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # Remove explicit JSON config mounts and use environment variables instead
      # - ../settings.json:/app/settings.json
      # - ../servers.tests.json:/app/servers.json
      - ../:/app # Mount the entire app directory for code access, as in original. [cite: 4]

    environment:
      # General settings adjusted for faster testing
      - LOG_LEVEL=DEBUG
      - NB_IDLE_TIMEOUT=30 # Short timeout for quick server shutdown in tests
      - NB_PLAYER_CHECK_INTERVAL=5 # Check frequently for player count
      - NB_QUERY_TIMEOUT=2 # Short query timeout
      - NB_SERVER_READY_MAX_WAIT=30 # Max wait for server to be ready
      - NB_INITIAL_BOOT_READY_MAX_WAIT=45 # Max wait for server on initial boot
      - NB_SERVER_STARTUP_DELAY=2 # Short delay after Docker start
      - NB_INITIAL_SERVER_QUERY_DELAY=2 # Short delay before initial query
      - NB_HEALTHCHECK_STALE_THRESHOLD=10 # Faster health check failure
      - NB_HEARTBEAT_INTERVAL=5 # Faster heartbeat for health checks

      # --- Server Definitions (via Environment Variables - Recommended for CI) ---
      # Server 1: Bedrock Survival
      - NB_1_NAME=Bedrock Survival
      - NB_1_SERVER_TYPE=bedrock
      - NB_1_LISTEN_PORT=19132
      - NB_1_CONTAINER_NAME=mc-bedrock # Refers to the service name below
      - NB_1_INTERNAL_PORT=19132

      # Server 2: Java Creative
      - NB_2_NAME=Java Creative
      - NB_2_SERVER_TYPE=java
      - NB_2_LISTEN_PORT=25565
      - NB_2_CONTAINER_NAME=mc-java # Refers to the service name below
      - NB_2_INTERNAL_PORT=25565
    healthcheck: # Docker Compose healthcheck for Nether-bridge itself
      test: ["CMD", "python", "nether_bridge.py", "--healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s # Give it some time to start up before first check

  mc-bedrock:
    container_name: mc-bedrock # Explicitly set container name
    image: itzg/minecraft-bedrock-server:latest
    restart: "no"
    networks:
      - mc-network
    environment:
      - EULA=TRUE
    healthcheck: # Docker Compose healthcheck for Bedrock server to ensure it's up
      test: ["CMD", "mcstatus", "bedrock", "127.0.0.1:19132", "status"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  mc-java:
    container_name: mc-java # Explicitly set container name
    image: itzg/minecraft-server:latest
    restart: "no"
    networks:
      - mc-network
    environment:
      - EULA=TRUE
      - TYPE=PAPER
      - JVM_ARGS=-Xmx512M -Xms512M # Limit memory for CI environment
    healthcheck: # Docker Compose healthcheck for Java server to ensure it's up
      test: ["CMD", "mcstatus", "java", "127.0.0.1:25565", "status"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

networks:
  mc-network:
    driver: bridge